{"version":3,"sources":["img/logo.png","context/auth.js","PrivateRoute.js","pages/Home.js","components/AuthForms.js","pages/Admin.js","pages/Login.js","pages/Signup.js","pages/Catch.js","pages/Upload.js","pages/Dashboard.js","pages/Information.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthContext","createContext","useAuth","useContext","PrivateRoute","Component","component","rest","authTokens","render","props","to","pathname","state","referer","location","Home","class","Card","styled","div","Form","Input","input","Button","button","Logo","img","Error","Admin","setAuthTokens","onClick","Login","useState","isLoggedIn","setLoggedIn","isError","setIsError","userName","setUserName","password","setPassword","src","logoImg","type","value","onChange","e","target","placeholder","axios","get","then","result","status","data","catch","Signup","confirmPassword","setconfirmPassword","preventDefault","post","Catch","latitude","setLatitude","longitude","setLongitude","weight","setWeight","length","setLength","bait","setBait","time","setTime","date","setDate","fish","setFish","temperature","setTemperature","weathercondition","setWeatherCondition","console","log","userId","record","id","Upload","handleFileChange","event","setState","file","handleSubmit","alert","onSubmit","this","action","method","name","Dashboard","history","push","Information","App","localStorage","getItem","Provider","setItem","JSON","stringify","exact","path","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0ac80384.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6f8a211b.png\";","import { createContext, useContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"./context/auth\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  const { authTokens } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        authTokens ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { referer: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;","import React from \"react\";\r\n\r\n\r\n\r\nfunction Home(props) {\r\n  return <header><div class=\"blue white-text bg-darken-2\">\r\n    <h1>Fishify</h1>\r\n    </div>\r\n    </header>;\r\n}\r\n\r\n\r\nexport default Home;","import styled from 'styled-components';\r\n\r\nconst Card = styled.div`\r\n  box-sizing: border-box;\r\n  max-width: 410px;\r\n  margin: 0 auto;\r\n  padding: 0 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 1rem;\r\n  border: 1px solid #999;\r\n  margin-bottom: 1rem;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: linear-gradient(to bottom, #6371c7, #5563c1);\r\n  border-color: #3f4eae;\r\n  border-radius: 3px;\r\n  padding: 1rem;\r\n  color: white;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 50%;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Error = styled.div`\r\n  background-color: red;\r\n`;\r\n\r\nexport { Form, Input, Button, Logo, Card, Error };","import React from \"react\";\r\nimport { Button } from \"../components/AuthForms\";\r\nimport { useAuth } from \"../context/auth\";\r\n\r\n\r\nfunction Admin(props) {\r\n  const { setAuthTokens } = useAuth();\r\n\r\n  function logOut() {\r\n    setAuthTokens();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>Log in</div>\r\n      <Button onClick={logOut}>Log out</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport logoImg from \"../img/logo.png\";\r\nimport { Card, Logo, Form, Input, Button, Error } from \"../components/AuthForms\";\r\nimport { useAuth } from \"../context/auth\";\r\n\r\nfunction Login(props) {\r\n  const [isLoggedIn, setLoggedIn] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { setAuthTokens } = useAuth();\r\n  const referer = props.referer || '/';\r\n\r\n\r\n  function postLogin() {\r\n    if (isLoggedIn) {\r\n      return <Redirect to={referer} />;\r\n    }else{ \r\n      \r\n    axios.get('/signup', {\r\n      userName,\r\n      password\r\n    }).then(result => {\r\n      if (result.status === 200) {\r\n        setAuthTokens(result.data);\r\n        setLoggedIn(true);\r\n      } else {\r\n        setIsError(true);\r\n      }\r\n    }).catch(e => {\r\n      setIsError(true);\r\n    });\r\n  }\r\n}\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to={referer} />;\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Logo src={logoImg} />\r\n      <Form>\r\n        <Input\r\n          type=\"username\"\r\n          value={userName}\r\n          onChange={e => {\r\n            setUserName(e.target.value);\r\n          }}\r\n          placeholder=\"email\"\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={e => {\r\n            setPassword(e.target.value);\r\n          }}\r\n          placeholder=\"password\"\r\n        />\r\n        <Button onClick={postLogin}>Sign In</Button>\r\n      </Form>\r\n      <Link to=\"/signup\">Don't have an account?</Link>\r\n        { isError &&<Error>The username or password provided were incorrect!</Error> }\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport logoImg from \"../img/logo.png\";\r\nimport { Card, Logo, Form, Input, Button, Error } from \"../components/AuthForms\";\r\nimport { useAuth } from \"../context/auth\";\r\n\r\nfunction Signup(props) {\r\n    const [isLoggedIn, setLoggedIn] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n    const { setAuthTokens } = useAuth();\r\n    const referer = props.referer || '/';\r\n\r\n\r\n    function handleSubmit () {\r\n      if (password !== confirmPassword) {\r\n        alert(\"Passwords don't match\");\r\n      } else {\r\n        alert(\"You have successfully created an account!\")\r\n      }\r\n    }\r\n  \r\n    function postSignup(e) {\r\n      e.preventDefault()\r\n\r\n      axios.post('/signup', {\r\n        userName,\r\n        password,\r\n        confirmPassword\r\n      }).then(result => {\r\n        if (result.status === 200) {\r\n          setAuthTokens(result.data);\r\n          setLoggedIn(true);\r\n        } else {\r\n          setIsError(true);\r\n        }\r\n      }).catch(e => {\r\n        setIsError(true);\r\n      });\r\n    }\r\n  \r\n    if (isLoggedIn) {\r\n      return <Redirect to={referer} />;\r\n    }\r\n    \r\n\r\n      return (\r\n        <Card>\r\n          <Logo src={logoImg} />\r\n          <Form>\r\n            <Input\r\n              type=\"username\"\r\n              value={userName}\r\n              onChange={e => {\r\n                setUserName(e.target.value);\r\n              }}\r\n              placeholder=\"email\"\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={e => {\r\n                setPassword(e.target.value);\r\n              }}\r\n              placeholder=\"password\"\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={e => {\r\n                setconfirmPassword(e.target.value);\r\n              }}\r\n              placeholder=\"password again\"\r\n            />\r\n            <Button onClick={postSignup}\r\n            >Sign Up</Button>\r\n          </Form>\r\n        </Card>\r\n\r\n        \r\n\r\n      );\r\n\r\n\r\n    }\r\n\r\n  \r\n\r\n\r\n\r\n\r\nexport default Signup;","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { Card, Logo, Form, Input, Button, Error } from \"../components/AuthForms\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from \"../context/auth\";\r\n\r\nfunction Catch(props) {\r\n  const [latitude, setLatitude] = useState(\"\");\r\n  const [longitude, setLongitude] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [length, setLength] = useState(\"\");\r\n  const [bait, setBait] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [fish, setFish] = useState(\"\");\r\n  const [temperature, setTemperature] = useState(\"\");\r\n  const [weathercondition, setWeatherCondition] = useState(\"\");\r\n  const [isLoggedIn, setLoggedIn] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n    const { authTokens } = useAuth();\r\n  \r\n\r\n  function postCatch() {\r\n    let userId = authTokens.record.id\r\n    axios.post('/catch', {\r\n      latitude,\r\n      longitude,\r\n      weight,\r\n      length,\r\n      bait,\r\n      time,\r\n      date,\r\n      fish,\r\n      temperature,\r\n      weathercondition,\r\n      userId\r\n    }) \r\n    // .then gotta finish this lines...\r\n    }\r\n  \r\n\r\n\r\n  return (\r\n    <Card>\r\n      <Form>\r\n        <Input\r\n          type=\"number\"\r\n          value={latitude}\r\n          onChange={e => {\r\n            setLatitude(e.target.value);\r\n          }}\r\n          placeholder=\"latitude\"\r\n        />\r\n        <Input\r\n          type=\"number\"\r\n          value={longitude}\r\n          onChange={e => {\r\n            setLongitude(e.target.value);\r\n          }}\r\n          placeholder=\"longitude\"\r\n        />\r\n        <Input\r\n          type=\"number\"\r\n          value={weight}\r\n          onChange={e => {\r\n            setWeight(e.target.value);\r\n          }}\r\n          placeholder=\"weight in ounces\"\r\n        />\r\n        <Input\r\n          type=\"number\"\r\n          value={length}\r\n          onChange={e => {\r\n            setLength(e.target.value);\r\n          }}\r\n          placeholder=\"length in inches\"\r\n        />\r\n        <Input\r\n          type=\"text\"\r\n          value={bait}\r\n          onChange={e => {\r\n            setBait(e.target.value);\r\n            console.log(e.target.value)\r\n          }}\r\n          placeholder=\"type of bait\"\r\n        /><Input\r\n        type=\"time\"\r\n        value={time}\r\n        onChange={e => {\r\n          setTime(e.target.value);\r\n        }}\r\n        placeholder=\"time\"\r\n      />\r\n      <Input\r\n        type=\"date\"\r\n        value={date}\r\n        onChange={e => {\r\n          setDate(e.target.value);\r\n        }}\r\n        placeholder=\"date\"\r\n      /><Input\r\n      type=\"text\"\r\n      value={fish}\r\n      onChange={e => {\r\n        setFish(e.target.value);\r\n      }}\r\n      placeholder=\"what fish\"\r\n    />\r\n    <Input\r\n      type=\"number\"\r\n      value={temperature}\r\n      onChange={e => {\r\n        setTemperature(e.target.value);\r\n      }}\r\n      placeholder=\"in fahrenheit\"\r\n    />\r\n    <Input\r\n      type=\"text\"\r\n      value={weathercondition}\r\n      onChange={e => {\r\n        setWeatherCondition(e.target.value);\r\n        console.log(e.target.value);\r\n      }}\r\n      placeholder=\"sunny? cloudy? rainy?\"\r\n    />\r\n\r\n        <Button onClick={postCatch}>Post your catch</Button>\r\n      </Form>\r\n    </Card>\r\n    \r\n    \r\n    \r\n  \r\n  );\r\n}\r\n\r\n\r\nexport default Catch;","import React, { Component } from \"react\";\r\n// import express from \"express\";\r\n\r\nclass Upload extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            file: ''\r\n        }\r\n    }\r\n\r\nhandleFileChange = event => {\r\nthis.setState({file: event.target.value\r\n    })\r\n}\r\n\r\nhandleSubmit = event => {\r\n    console.log(\"this works\") \r\nalert(\"File succesfuly uploaded\")\r\nalert(`${this.state.file}`)\r\nevent.preventDefault()\r\n// this.mainInput.value = \"\";\r\n}\r\n    render() {\r\n        return (\r\n        \r\n<form onSubmit={this.handleSubmit} action=\"/upload\" method=\"POST\" >\r\n    <div>\r\n        <label>File</label>\r\n        <input  type=\"file\" name=\"myImage\" \r\n        value={this.state.file} \r\n        onChange={this.handleFileChange}/>\r\n</div>\r\n    <button type=\"submit\" class=\"btn\">Submit</button>\r\n</form>\r\n        \r\n    \r\n        )\r\n}\r\n}\r\n\r\n\r\n\r\nexport default Upload;","import React, { Component } from 'react';\r\nimport { Logo, Form, Input, Button, Error } from \"../components/AuthForms\";\r\nimport postSignup from './Signup';\r\nimport { createBrowserHistory as history} from 'history';\r\nimport Upload from \"./Upload\"\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Button onClick={() => this.props.history.push('/Catch')}>Add a Catch</Button>\r\n            <Button onClick={() => this.props.history.push('/Information')}>Information</Button>\r\n            <Button onClick={() => this.props.history.push('/Upload')}>Upload</Button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport { BrowserRouter as Link } from \"react-router-dom\";\r\n\r\n\r\nconst Information = () => {\r\n    return (\r\n    <div>\r\n        <div class=\"btn btn-large blue darken-4 white-text\">\r\n            <Link to=\"#\">Here goes the weather Information</Link>\r\n        </div>\r\n        <div class=\"btn btn-large blue darken-4 white-text\">\r\n            <Link to=\"#\">Here goes the fish Information</Link>\r\n        </div>\r\n        <div class=\"btn btn-large blue darken-4 white-text\">\r\n            <Link to=\"#\">Here goes the suggestions Information</Link>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Information;","import React, { useState, Component } from \"react\";\r\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\r\nimport PrivateRoute from './PrivateRoute';\r\nimport Home from \"./pages/Home\";\r\nimport Admin from \"./pages/Admin\";\r\nimport { AuthContext } from \"./context/auth\";\r\nimport Login from \"./pages/Login\";\r\nimport Signup from './pages/Signup';\r\nimport './App.css';\r\nimport Catch from './pages/Catch';\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport Information from \"./pages/Information\";\r\nimport Upload from \"./pages/Upload\"\r\n\r\n\r\n\r\nfunction App(props) {\r\n  const [authTokens, setAuthTokens] = \r\n  useState(localStorage.getItem('authTokens') || '');\r\n  \r\n  const setTokens = (data) => {\r\n    localStorage.setItem(\"tokens\", JSON.stringify(data));\r\n    setAuthTokens(data);\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\r\n      <Router>\r\n     \r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/signup\" component={Signup} />\r\n          <Route path=\"/catch\" component={Catch} />\r\n          <Route path=\"/dashboard\" component={Dashboard} />\r\n          <Route path=\"/information\" component={Information} />\r\n          <Route path=\"/Upload\" component={Upload} />\r\n\r\n          <PrivateRoute path=\"/admin\" component={Admin} />\r\n        \r\n            <div class=\"btn btn-large blue darken-4 white-text\">\r\n                  <Link to=\"/\">Home Page</Link>\r\n            </div>\r\n            <div class=\"btn btn-large blue darken-4 white-text\">\r\n                  <Link to=\"/admin\">Log in</Link>\r\n            </div>\r\n            <div class=\"btn btn-large blue darken-4 white-text\">\r\n                  <Link to=\"/dashboard\">Dashboard</Link>\r\n            </div>\r\n\r\n           \r\n      </Router>\r\n    </AuthContext.Provider>\r\n   \r\n  );\r\n\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}